-------------------------------------------------------------------------------------------------------------------------------------------
                                                    BANCO DE DADOS / MYSQL
-------------------------------------------------------------------------------------------------------------------------------------------

Para o que serve? Registrar instâncias de coisas separadas que tem caracterisitcas semelhantes em tabelas
-- Estrutura
	Modelo relacional: Tipo de estrutura de banco de dados onde as tabelas se relacionam e permitem que você caminhe através 
   	dessas relações buscando informações relacionadas.
	
	BANCO DE DADOS { TABELAS { COLUNAS { REGISTROS }}}

-- Definições / Conceitos
   Relacionamento: Entidade relacionada a outra entidade
   
   -- Linguagens
   	DDL: Definição / Mexe na estrutura {CREATE DATABASE, CREATE TABLE, ALTER TABLE, DROP TABLE }
	DML: Manipulação / Mexe em dados {INSERT INTO}
	DQL: Solicitações
	DCL: Controle
	DTL: Transações {Durabilidade, isolamento, consistência e atomicidade}
	// Data [x] Language
	
-- Tipos primitivos
	Numérico { Inteiro, Real, Lógico } 
	DATA/TIME { Data, Hora, Year }
	Literal { Caractere, Texto, Binário, Coleção }
	Espacial { Geometry, Point, Polygon, MultiPolygon }
	
-- Comandos 
	CREATE DATABASE bancodeteste // Criar base de dados
	DEFAULT CHARACTER SET utf8 		|| Ambos para configu -
	DEFAULT COLLATE utf8_general_ci;	|| ração de acentuação
	USE bancodeteste;   // Usar base de dados
	DESCRIBE || DESC;		// Descrever dados desejados
	STATUS;			// Listar BD abertos
	DROP;			// Excluir tabelas
	RENAME TABLE users TO user;    // Renomear tabela
	SELECT * FROM projetoDoceria.product;   // Listar da tabela projetoDoceria os dados de produtos

	* Tabelas e colunas
	  
	  IF NOT EXISTS || IF EXISTS	// Usado na criaçao de tabela como condicional, exemplo: CREATE TABLE IF NOT 
	  EXISTS pessoa(...);
	  
	  CREATE TABLE users( 
	  id int(4) AUTO_INCREMENT,
	  name varchar(255) NOT NULL,
	  email varchar(255) NOT NULL UNIQUE,
	  telephone varchar(255),
	  userName varchar(255) NOT NULL UNIQUE,
	  password varchar(255) NOT NULL,
	  PRIMARY KEY (id)
	  );
	  
	  ALTER TABLE itemPedido CHANGE COLUMN quantidade amount INT(11) NOT NULL;	// Alterar dados da coluna renomeando a mesma [
	  CHANGE: tipos, constraints e nome da coluna] 
	  ALTER TABLE itemPedido MODIFY COLUMN quantidade INT(11) NOT NULL;		// Alterar dados da coluna [MODIFY:
	  alterar tipos e constraints]
	  ALTER TABLE purchaseOrder ADD COLUMN customer_id INT(4) NOT NULL;	// Adicionar dados coluna
	  ALTER TABLE pessoa RENAME TO gafanhotos;	// Renomear tabelas
	  
	  ALTER TABLE TABELA_SERVICO ADD CONSTRAINT 'NOME DA CONSTRAINT' FOREIGN KEY(NOME ATRIBUTO AO QUAL QUER REFERENCIAR)
	  REFERENCES NOMEDATABELA(ATRIBUTOQUEDESEJA); 		// Alterando tabela e adicionando relacionamentos

	  
	* Registros
   	 DELETE FROM tbl_autores WHERE ID_Autor = 2;		// Excluir registros
 	 INSERT INTO fornecedores(codigo, nome) VALUES (null, “Ricardo")	// Inserir dados na tabela
	 UPDATE nomedatabela SET atributo=novovalor WHERE id=iddatabela		// Atualizando registros de colunas já populadas
  	

  
	
	* JOIN
	  Inner Join    // retorna os registros que são comuns às duas tabelas.
	  Exemplo:
	  SELECT o.purchaseOrder_id,  p.name, o.amount, p.unitaryValue, o.Totalvalue
	  FROM orderedItem as o
	  INNER JOIN product as p
			on o.product_id = p.id
							  ORDER BY o.purchaseOrder_id;
  
	* Left Join   // tem como resultado todos os registros que estão na tabela A (mesmo que não estejam na tabela B) e os registros 
	  da tabela B que são comuns à tabela A.
	  SELECT a.Nome, b.Nome
	  FROM TabelaA as A
	  LEFT JOIN TabelaB as B
			on a.Nome = b.Nome
  
	* Right Join    // teremos como resultado todos os registros que estão na tabela B (mesmo que não estejam na tabela A) e os registros 
  	da tabela A que são comuns à tabela B.
		SELECT a.Nome, b.Nome
		FROM TabelaA as A
		RIGHT JOIN TabelaB as B
			on a.Nome = b.Nome
  
	* Outer Join    //  tem como resultado todos os registros que estão na tabela A e todos os registros da tabela B.
		SELECT a.Nome, b.Nome
		FROM TabelaA as A
		FULL OUTER JOIN TabelaB as B
			on a.Nome = b.Nome
	* Left Excluding Join   // retorna como resultado todos os registros que estão na tabela A e que não estejam na tabela B.
		SELECT a.Nome, b.Nome
		FROM TabelaA as A
		LEFT JOIN TabelaB as B
			on a.Nome = b.Nome
			WHERE b.Nome is null
  
	* Right Excluding Join    //  retorna como resultado todos os registros que estão na tabela B e que não estejam na tabela A.
		SELECT a.Nome, b.Nome
		FROM TabelaA as A
		RIGHT JOIN TabelaB as B
			on a.Nome = b.Nome
			WHERE a.Nome is null

	* Outer Excluding Join    //  teremos como resultado todos os registros que estão na tabela B, mas que não estejam na tabela A, e todos os 
  	registros que estão na tabela A, mas que não estejam na tabela B.
		SELECT a.Nome, b.Nome
		FROM TabelaA as A
		FULL OUTER JOIN TabelaB as B
			on a.Nome = b.Nome
			WHERE a.Nome is null or b.Nome is null

-- CONSTRAINTS
	AUTO-INCREMENT
	NOT NULL
	UNIQUE	
	AFTER
	FIRST	
	UNSIGNED (Sem acentuaçoes)

-- Instalação
	MySql > sudo apt install mysql-server mysql-client && sudo mysql_secure_installation
	WorkBench > sudo apt install mysql-workbench
  
-- Comandos terminal / Configuração / Manutenção
	mysql -h localhost -u root -p   // Entrar no mysql setando o -h referenciando o servidor (localhost), -u referenciando ao usuário
	e -p referente a senha.
	CREATE USER 'novousuario'@'localhost' IDENTIFIED BY 'password';   //Criar um Novo Usuário
	GRANT ALL PRIVILEGES ON * . * TO 'novousuario'@'localhost';   // Atribuir privilégios a determinado usuário
	FLUSH PRIVILEGES;   // Resetar privilégios

-- Sites 
	Curso > https://www.youtube.com/watch?v=Ofktsne-utM&list=PLHz_AreHm4dkBs-795Dsgvau_ekxg8g1r 
	Desinstalar mysql > https://linuxscriptshub.com/uninstall-completely-remove-mysql-ubuntu-16-04/ 
	Primeiros passos mysql > https://www.devmedia.com.br/primeiros-passos-no-mysql/28438
	Relacionamento de tabelas > https://www.devmedia.com.br/forum/relacionamento-de-tabelas-no-mysql-chave-estrangeira/558559


